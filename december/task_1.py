# Для вывески нового офиса были заказаны неоновые буквы.
# В офис привезли какой-то набор из больших латинских букв.
# Проверьте, что из них действительно можно составить строку «TINKOFF» для вывески.
# Тинькофф не хочет платить за лишние буквы, поэтому должны быть использованы все привезённые буквы.

# Формат входных данных
# Каждый тест состоит из нескольких наборов входных данных. В первой строке находится одно целое число t (1 ≤ t ≤ 100) — количество наборов входных данных.
# Далее следует описание наборов входных данных.Единственная строка каждого набора входных данных содержит одну непустую строку из больших латинских букв
# длиной не более 20 символов — привезённый набор букв.

# Формат выходных данных
# Для каждого набора входных данных, в отдельной строке, выведите «Yes» (без кавычек), если из всех
# привезённых букв можно составить строку «TINKOFF», и «No» иначе. Вы можете выводить каждую букву в любом
# регистре (строчную или заглавную). Например, строки «yEs», «yes», «Yes» и «YES» будут приняты как положительный ответ.

# Примеры данных
# 4
# TINKOFF Yes
# TINKOFFF No
# AAAA No
# FFOKNIT Yes

# from collections import Counter


t = int(input())
combinations = []
for i in range(t):
    combinations.append(sorted(input()))

result = []
pattern = sorted('TINKOFF')
# pattern_map = Counter(pattern)

for word in combinations:
    # word_map = Counter(word)
    # if word_map == pattern_map:
    if word == pattern:
        result.append('Yes')
    else:
        result.append('No')

for res in result:
    print(res)
