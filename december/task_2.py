# Тинькофф начал разрабатывать новый проект. Для этого было подобрано n разработчиков.
# У i-го разработчика есть порог социальности a от i, это значит, что он готов контактировать напрямую с не более чем a от i
# другими разработчиками. Определите, можно ли наладить контакт между какими-то парами разработчиков, так чтобы любые два
# контактировали либо напрямую, либо через других разработчиков.

# Формат входных данных
# Каждый тест состоит из нескольких наборов входных данных.
# В первой строке находится одно целое число t (1 ≤t≤ 1000) — количество наборов входных данных.
# Далее следует описание наборов входных данных.
# Первая строка каждого набора входных данных содержит
# одно число n (1 ≤ n ≤ 105 )— количество разработчиков.
# Вторая строка содержит n натуральных чисел a от i (1 ≤ a от i ≤ 10^9) — пороги социальностей разработчиков.
# Гарантируется, что сумма значений n по всем наборам входных данных не превосходит 10^5.

# Формат выходных данных
# Для каждого набора входных данных, выведите «Yes», если можно наладить контакт между программистами,
# и «No» иначе. 

# Примеры данных
# Ввод
# 4
# 1
# 1000000000
# 2
# 1 1
# 3
# 1 1 1
# 4
# 1 1 2 2

# Вывод
# Yes
# Yes
# No
# Yes

t = int(input())
combinations = []
for _ in range(t):
    n = int(input())
    links = sum(map(int, input().split()))
    combinations.append((n, links))
result = []

for combination in combinations:
    devs, links = combination
    if devs == 1 or devs == 2:
        result.append("Yes")
    elif links / 2 + 1 >= devs:
        result.append("Yes")
    else:
        result.append("No")

for res in result:
    print(res)
