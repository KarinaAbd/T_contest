# 3 Задача Лифты и переговорки

# У Кати насыщенный день на работе. Ей надо передать n разных договоров коллегам. 
# Все встречи происходят на разных этажах, а между этажами можно перемещаться только по лестничным пролетам
# — считается, что это улучшает физическую форму сотрудников. 
# Прохождение каждого пролета занимает ровно 1 минуту.

# Сейчас Катя на парковочном этаже, планирует свой маршрут. Коллег можно посетить в любом порядке,
# но один из них покинет офис через t минут. С парковочного этажа лестницы нет — только лифт,
# на котором можно подняться на любой этаж.

# В итоге план Кати следующий:
# Подняться на лифте на произвольный этаж. Считается, что лифт поднимается на любой этаж за 0 минут.
# Передать всем коллегам договоры, перемещаясь между этажами по лестнице.
# Считается, что договоры на этаже передаются мгновенно.
# В первые t минут передать договор тому коллеге, который планирует уйти.
# Пройти минимальное количество лестничных пролетов.

# Формат входных данных
# В первой строке вводятся целые положительные числа n и t (2≤n,t≤100) — количество сотрудников и время,
# когда один из сотрудников покинет офис (в минутах). В следующей строке n чисел — номера этажей,
# на которых находятся сотрудники. Все числа различны и по абсолютной величине не превосходят 100.
# Номера этажей даны в порядке возрастания. В следующей строке записан номер сотрудника,
# который уйдет через t минут.


# Формат выходных данных
# Выведите одно число — минимально возможное число лестничных пролетов, которое понадобится пройти Кате.


def find_min_movement(): 
    _, time_limit = map(int, input().split())
    levels = list(map(int, input().split()))
    level_l = int(input())

    time_for_normal = levels[-1] - levels[0]

    level_l -= 1
    limit_from_min = levels[level_l] - levels[0]
    limit_from_max = levels[-1] - levels[level_l]
    possible_time = min(limit_from_min, limit_from_max)

    if possible_time > time_limit:
        time_for_normal += possible_time

    print(time_for_normal)


find_min_movement()
